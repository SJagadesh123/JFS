HTML Forms and Input 
====================

A form is an area in a web page that can contain form elements. 

A form is defined with the <form> tag. 

The different type of elements that can be placed in a form are text fields, buttons, text area, radio buttons, list box, checkboxes, drop down List box etc.

Attributes of <form> tag
------------------------
1) action=URL 
- specifies an address (URL) where to submit the form (default: the same page).

2) name - specifies a name used to identify the form (for DOM usage: document.forms.name).

3) method - specifies the HTTP method used when submitting the form (default: GET).

4) autocomplete="on | off"  - specifies whether a form should have autocomplete on or off

5) enctype

etc

<form action="register.php" method="get">

<form action="register.aspx" method="post">

Difference between GET & POST Methods
-------------------------------------
(a) GET method is used for submitting only a limited amount of data where as POST method is used for submitting more amount of data

(b) GET method submits only string type data where as POST method can submit any type of data to server side program.

(c) In GET method , form data is submitted as a query string ie; along with URL itself after ? where as in POST method the form data is submitted along with HTTP Request object.

(d) GET method request can be used for book marking where as POST method request cannot be bookmarked

(e) POST method offers better security than GET

(f) The default method is GET method









> GET method places the parameters inside the URI while POST method appends the parameters into the body.

> GET is essentially used for fetching the information. As against, the purpose of POST method is to update the data.

> POST query results cannot be bookmarked whereas GET query results can be bookmarked because it exists in the form of URL.

> In GET method the information is visible in the URL which increases vulnerabilities and the risk of hacking. In contrast, the POST method does not show variable in URL and multiple encoding techniques can also be used in it, which make it resilient.

> When GET method is used in the form, only ASCII characters are accepted in data types. On the contrary, POST method does not bind form data types and permit binary as well as ASCII characters.

> The variable size in GET method is approx 2000 characters. Inversely, POST method allows up to 8 Mb variable size.

> GET method data is cacheable while data of POST method is not.



Form Tags 
---------
The <form> element can contain one or more of the following form elements:

1) <input> - defines an input field

2) <textarea> - defines a text-area (a multi-line text input control)

3) <label> - defines a label to a control

3) <fieldset> - defines a fieldset 

4) <legend> - defines a caption for a fieldset

5) <select> - defines a selectable list (a drop-down box)

6) <option> - defines an option in the drop-down box

7) <optgroup> - used to group related options in a drop-down list.

8) <button> - defines a push button

8) <datalist> - to define a list of values
etc









form {
  display: block;
  margin-top: 0em;
}

Form fields are classified into 2 types:
(a) Input fields
(b) Select fields

Input Fields:

Field Name	Keyword	
----------	-------	
Text		text		
<input type="text">

Password		password			<input type="password"> 

Checkbox		checkbox			<input type="checkbox">

Radio		radio			<input type="radio">

submit button	submit			<input type="submit">

Reset button	reset			<input type="reset">

Text Area		textarea	<textarea>....</textarea>


Attributes of <input> Tag
-------------------------

1) type=text | password | checkbox | radio | button | submit | reset | hidden | file | image | number | date | color | range | month | week  | time | email | url | datetime-local etc

2) align= left | right | top | middle | bottom  specifies the alignment of an image input (only for type="image")

3) alt= text - specifies an alternate text for images (only for type="image")

4) checked="checked" - specifies that an <input> element should be pre-selected when the page loads (for type="checkbox" or type="radio")

5) disabled="disabled" - specifies that an element should be disabled

6) maxlength=number - specifies the maximum number of characters allowed in an <input> element

7) name=text - specifies the name of an <input> element

8) readonly="readonly" - specifies that an input field is read-only

9) size=number - specifies the width, in characters, of an <input> element

10) src=URL - specifies the URL of the image to use as a submit button (only for type="image")

11) value= text - specifies the default value of a form element

12) list = id of datalist 
it refers to a <datalist> element that contains pre-defined options for an <input> element.

Example:

Browser Name : 
<input list="browsers" name="browser">

<datalist id="browsers">
  <option value="Internet Explorer">
  <option value="Firefox">
  <option value="Chrome">
  <option value="Opera">
  <option value="Safari">
</datalist>


13) min and max attributes
- specify the minimum and maximum value for a number, range, date, datetime-local, month, time and week input elements.

<div>
 <form action="register.php">
  Enter a date before 2019-10-24:
  <input type="date" name="bday1" max="2019-10-24"><br>

  Enter a date after 2000-01-01:
  <input type="date" name="bday2" min="2000-01-02"><br>

  Quantity (between 10 and 50):
  <input type="number" name="quantity" min="10" max="50" step="5"><br>

 <input type="submit" value="register">
</form>    
</div>    

14) multiple
- multiple attribute specifies that the user is allowed to enter more than one value in the <input> element.

This attribute works with - "email" and "file"

 <form action="register.jsp" method="post" enctype="multipart/form-data">

  Select Pictures: <input type="file" name="pics[]" multiple>
  <br><br>
  Emails <input type=email name="emails" multiple>
  <br><br>
  <input type="submit">
 </form>


15) pattern Attribute
- specifies a regular expression that the <input> element's value is checked against.

- this works with -text, search, url, tel, email, and password fields.

Note: Use the "title" attribute to describe the pattern to help the user.

<form action="register.jsp" method="post">

 Country Code: <input type="text" name="country_code" pattern="[A-Za-z]{3}" title="Three letter country code">

 <input type="submit" value="Register">
</form>

for more patterns : google for "HTML5 patterns"  http://html5pattern.com/

16) placeholder Attribute
- specifies a hint. The hint is displayed in the input field before the user enters a value.

<input type="text" name="fname" placeholder="enter first name">


17) required
- attribute specifies that an input field must be filled out before submitting the form.

User Name: <input type="text" name="uname" required="required">


18) step Attribute
- specifies the legal number intervals for an <input> element.

Example: if step="3", legal numbers could be 0, 3, 6, etc.

works with : number, range, date, datetime, month, time and week.

 <input type="number" name="points" min="1" max="100" step="3">




2) <label> in Form
------------------
If you click on the label, it will focus on the text control. To do so, you need to have "for" attribute in <label> tag with the value same as "id" attribute value of input tag.

<label for="fn">First Name: </label>  
<input type="text" id="fn" name="fname"/> <br>  


3) <textarea> in form
---------------------
<textarea> tag is used to define a multi-line text input control.

Attributes of <textarea>

a) cols=number
b) rows=number
c) name=text
d) disabled=disabled
e) form="id of form"
etc

<label for="adr">Address</label>
<textarea rows="5" cols="25" name="addr" id="adr">  </textarea>  


<form action="updates.jsp" id="usrform">  
 Name: <input type="text" name="usrname">  
 <input type="submit" value="Register">  
</form>  
<br>  
<textarea rows="9" cols="25" name="comment" form="usrform"></textarea>  

Note: The textarea above is outside the form element, but still be a part of the form


4) <select> Tag
---------------
The <select> element is used to create a drop-down list (combo box) and list box.

The <option> tags inside the <select> element define the available options in the list.

Attributes:

1) name = name 

2) size = number - defines the number of visible options in a drop-down list

3) multiple - specifies that multiple options can be selected at once; so that it becomes a list box

4) disabled - list becomes disabled


<option> Tag
------------
- defines an option in a select list.

1) disabled

2) selected

3) value= text -specifies the value to be sent to a server


Example:

<tr>
<td>Mode of Payment</td>
<td>
<select name="payment">
 <option>Cash</option>	
 <option value="CC">Credit Card</option>
 <option selected>Net Banking</option>
</select>	
</td>
</tr>


<optgroup> Tag
--------------
- used to group related options in a drop-down list.

Attribute
1) label = text
Example:

<div>
 <form>
  Courses Opted:
  <select name=course>
   <optgroup label="Programming Languages">
    <option>C</option>    
    <option>CPP</option>       
    <option selected>Core Java</option>        
    <option value="AJ">Adv Java</option>        
   </optgroup>    

   <optgroup label="Mobile Technologies">
    <option>Android</option>        
    <option>iPhone</option>
   </optgroup>    
  </select>    
 </form>
</div>


<fieldset> tag
--------------
<fieldset> - groups related data in a form.

<legend> - defines a caption for the <fieldset> 

Attributes of <legend>
----------------------
1) align= left | right | center

Example:

<head>
<style>
   fieldset{
        border:3px solid red;
        border-radius:15px;
	background-color: bisque;
	width:70%;
        margin:auto;
    }    
    legend{
        border:3px solid red;
        padding:5px 40px; 
        background-color:blue;
        color:white;
        border-top-left-radius: 10px;
        border-top-right-radius: 180px;
        border-bottom-left-radius: 180px;
        border-bottom-right-radius:10px;        
    }
</style>    
</head>
<body>
<form action="Register.aspx">
 <fieldset>
  <legend>Personal Information: </legend>

  First Name: <input type="text" name="fname">
  <br><br>

  Last Name: <input type="text" name="lname">
  <br><br>
 </fieldset>
 <br><br>

 <fieldset>
  <input type="submit" value="Submit">
 </fieldset>
</form>
</body>
</html>





<head>
<style>
legend { 
  display: block;
  padding-left: 2px;
  padding-right: 2px;
  border: 2px solid red;
  border-top-left-radius:15px;
  border-bottom-right-radius:15px;
  background-color:blue;
}
</style>
</head>

<form novalidate>


www.gmail.com > Create account


<form action="action_page.php" method="GET" target="_blank" accept-charset="UTF-8"
enctype="application/x-www-form-urlencoded" autocomplete="off" novalidate>
.
form elements
.
</form>





    <form action="#">  
    <table>  
    <tr>  
        <td class="tdLabel"><label for="register_name" class="label">Enter name:</label></td>  
        <td><input type="text" name="name" value="" id="register_name" style="width:160px"/></td>  
    </tr>  
    <tr>  
        <td class="tdLabel"><label for="register_password" class="label">Enter password:</label></td>  
        <td><input type="password" name="password" id="register_password" style="width:160px"/></td>  
    </tr>  
    <tr>  
        <td class="tdLabel"><label for="register_email" class="label">Enter Email:</label></td>  
        <td  
    ><input type="email" name="email" value="" id="register_email" style="width:160px"/></td>  
    </tr>  
    <tr>  
        <td class="tdLabel"><label for="register_gender" class="label">Enter Gender:</label></td>  
        <td>  
    <input type="radio" name="gender" id="register_gendermale" value="male"/>  
    <label for="register_gendermale">male</label>  
    <input type="radio" name="gender" id="register_genderfemale" value="female"/>  
    <label for="register_genderfemale">female</label>  
        </td>  
    </tr>  
    <tr>  
        <td class="tdLabel"><label for="register_country" class="label">Select Country:</label></td>  
        <td><select name="country" id="register_country" style="width:160px">  
        <option value="india">india</option>  
        <option value="pakistan">pakistan</option>  
        <option value="africa">africa</option>  
        <option value="china">china</option>  
        <option value="other">other</option>  
    </select>  
    </td>  
    </tr>  
    <tr>  
        <td colspan="2"><div align="right"><input type="submit" id="register_0" value="register"/>  
    </div></td>  
    </tr>  
    </table>  
    </form>  

HTML <meta> Tag
==============
The <meta> tag provides additional information about the HTML document. 

Metadata will not be displayed on the page

1) Define keywords for search engines:

<meta name="keywords" content="HTML, HTML training, HTML Online Trainings">


2) Define a description of your web page:

<meta name="description" content="Computer Software Training">

3) Define the author of a page:

<meta name="author" content="Sunil Joseph">

4) Declares the expiration

<meta name="expires" content="date">

The "expires" meta tag declares to search engines when the content on your website will expire. This is used to indicate to search engines when to delete the webpage from their database.

<meta name="expires" content="Thu, 01 Jan 2019">

5) Document Revision Date - to give information about when last time the document was updated. 

<meta name="revised" content="Zettamine, 3/3/2024" >

6)  Refresh document every 10 seconds:

<meta http-equiv="refresh" content="10">

7) Page Redirection - to redirect your page to any other webpage

<meta http-equiv="refresh" content="5; url=http://www.zettamine.com" />


<meta name="viewport" content="width=device-width, initial-scale=1.0">
