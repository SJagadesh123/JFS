jQuery UI
=========
jQueryUI stands for jQuery User Interface. 

It is a collection of animated visual effects, widgets, and themes implemented with CSS, HTML and JavaScript and built on top of jQuery.

jQueryUI is a free and open source software first published and released in September 2007. 

jQuery UI Features
------------------
> jQueryUI facilitates you to make highly interactive web applications.

> It is open source and free to use.

> It provides a powerful theme mechanism.

> It is very stable and maintenance friendly.

> It provides an extensive browser support

> jQuery is the core library and jQuery UI is built on top of it

> To use jQuery UI - we should include jQuery also

> Good documentation

jQuery UI Categorization
------------------------
   (1) Interactions
   (2) Widgets
   (3) Effects
   (4) Utilities

1) Interactions: Interactions are the set of plug-ins which facilitates users to interact with DOM elements. 

   (a) Draggable
   (b) Droppable
   (c) Resizable
   (d) Selectable
   (e) Sortable

2) Widgets: Widgets are the jQuery plug-ins which makes you able to create user interface elements like date picker, progress bar etc. Mostly used widgets:

    (a) Accordion
    (b) Autocomplete
    (c) Dialog
    (d) Button
    (e) Date Picker
    (f) Menu
    (g) Progress Bar
    (h) Tabs
    (i) Tooltip
    (j) Slider
    (k) Spinner
	etc
3) Effects: The internal jQuery effects contain a full suite of custom animation and transition for DOM elements.

    (a) Hide
    (b) Show
    (c) Add Class
    (d) Remove Class
    (e) Switch Class
    (f) Toggle Class
    (g) Color Animation
    (h) Effect
    (i) Toggle

4) Utilities: Utilities are the modular tools, used by jQuery library internally.

    (a) Position: It is used to set the position of the element according to the other element's alignment (position).
    (b) Widget factory
----------------------------

Download jQuery UI from http://jqueryui.com/download/

Required files :

- include jquery-ui.css , jquery-ui.structure.css, jquery-ui.theme.css, jquery-3.5.1.js, jquery-ui.js
https://jqueryui.com/

---------------------------------------------------

>> jQuery UI Widgets
====================

1) jQuery UI Datepicker
-----------------------
Case - 1 (to display inline) 

<div id="dp">
  <h2>Date Picker Widget</h2>
</div>
<script>
 $('#dp').datepicker();   //mm-dd-yyyy
</script>

Case - 2
<div id="dp">
 <h2>jQuery UI Date Picker</h2>
 <input id="date_input" type="text">
</div>

<script>
 $('#date_input').datepicker();
</script>

Case - 3 (to show multiple months)
<script>
 $('#date_input').datepicker({
   numberOfMonths: 2
 });
</script>

Case - 4 (to change month and year)
<script>
 $('#date_input').datepicker({
   numberOfMonths: 1,
   changeYear: true,
   changeMonth: true
 });
</script>


Case - 5 (to show week number and to change label)
<script>
 $('#date_input').datepicker({
   numberOfMonths: 1,
   changeYear: true,
   changeMonth: true,
   showWeek: true,
   weekHeader: 'Week',
   showOtherMonths: true
 });
</script>

Case - 6 (validation for mindate and maxdate)
<script>
 $('#date_input').datepicker({
   numberOfMonths: 1,
   changeYear: true,
   changeMonth: true,
   showOtherMonths: true,
   minDate: new Date(2020,0,5), //yyyy,mm,dd
   maxDate: new Date(2020,11,1),
   showButtonPanel:true,
   showAnim: 'show' | 'slideDown' | 'fadeIn' | 'blind' | 'bounce' | 'clip' | 'drop' | 'fold' | 'slide' | 'explode'
   closeText:'Close', 
   firstDay: 1,
   dateFormat:'d M, y' | 'yy-mm-dd' | 'd MM, y' | 'DD, d MM, yy',
   showOn: "button", 
   
 });
</script>

showOn: "button",
buttonImage: "calendar.gif",
buttonImageOnly: true,
altField: "#alternate",  //id of another field
altFormat: "DD, d MM, yy"

=============================================

2) jQuery UI Accordion
----------------------
jQuery UI Accordian is an expandable and collapsible content holder that is broken into sections.

The Accordion control is used for displaying groups of information that the user can reveal and hide individually. 


<div id="panels">
  <h2>HTML</h2>
  <p>lorem60...</p>

  <h2>CSS</h2>
  <p>lorem60...</p>

  <h2>Java Script</h2>
  <p>lorem60...</p>
<div>

<script>
 $('#panels').accordion()
</script>

<script>
 $('#panels').accordion({
   collapsible:true,
   event:'mouseover'| 'click',
   animate:1000,
   activate:1,
   heightStyle:"content",
   icons: {header:'ui-icon-plus', activeHeader:'ui-icon-minus'}
 })
</script>


https://api.jqueryui.com/accordion/
https://api.jqueryui.com/theming/icons/


 $("#panels").draggable();
 $("#panels").resizable();
====================================

3) jQuery UI Autocomplete
-------------------------
The autocomplete control provides suggestions to the user as they enter data into a field. This can be used to speed up data entry, guide the user toward entering a set of known default values, etc.

The list of suggestions can come from an array, a URL, or a function that you supply that can retrieve the data from wherever your application desires.


<div>
  <b>Enter Course Name:</b>
  <input type="text" name="" id="courseText">
</div> 

<script>
let courses=["Android","ASP","ASP.NET", "BASIC", "C", "C++", "Clojure","COBOL", "ColdFusion", "Erlang", "Fortran", "Groovy", "Haskell", "Java","IPhone", "SQL", "JavaScript", "Lisp", "Perl", "PHP",  "Python",  "Ruby", "Scala",  "Scheme"  ];  

 $('#courseText').autocomplete({
   source:courses
 });
</script>

 $('#courseText').autocomplete({
   source:courses,
   autoFocus: false,
   minLength: 2,
   delay: 300,
 });


$('#courseText').autocomplete({
    source:courses
},{
  autoFocus: false,
  delay: 300,
  minLength: 2
});




<script>  
$(function() 
{  
$("#country").autocomplete({  
 source:[
    {label:"India", value:"IND"},  
    {label:"America", value:"USA"},  
    {label:"Pakistan", value:"PAK"},  
    {label:"Iceland", value:"ICE"},  
    {label:"Australia", value:"AUS"}
]  
});  
});  
</script>  
</head>  
<body>  
<div class="ui-widget">  
<p>Country Name : <input id="country">  
</div>  
==================================== 
4) jQuery UI Dialog
-------------------
The jQuery UI dialog method is used to create a basic dialog window. It has a title bar and a content area, and can be moved, resized and closed with the 'x' icon by default. 

> Example of alert() in plain JS

<div id="msgbox" title="Message Box>
  Welcome to Softwave IT
  <img src="logo.jpg">
  <button>Close Me</button>
</div>

$('btn1').click(function(){
  $('#msgbox').dialog()
})


        $("#btn1").click(function(){
            $('#msgbox').dialog({
                title: 'Custom Message Box',
                draggable:false,
                resizable: true,
                width:500,
                height:300,
                modal:true,
                buttons: [
                    {
                        text:'Close',
                        icon:'ui-icon-heart',
                        click:function(){
                            $(this).dialog("close")
                        }
                    },
                    {
                        text:'OK',
                        icon:'ui-icon-heart',
                        click:function(){
                            $(this).dialog("close")
                        }
                    }
                ]
            })
        });


https://api.jqueryui.com/theming/icons/


maxheight 	This option sets maximum height, in pixels, to which the dialog box can be resized. By default its value is false.

maxwidth 	This option sets the maximum width to which the dialog can be resized, in pixels. By default its value is false.

minheight 	This option is the minimum height, in pixels, to which the dialog box can be resized. By default its value is 150.

minwidth 	This option is the minimum width, in pixels, to which the dialog box can be resized. By default its value is 150.

Example - 1 : 

<html>  
<head>  

<style>  
.ui-widget-header,.ui-state-default, ui-button
{  
 background:#b9cd6d;  
 border: 1px solid #b9cd6d;  
 color: #FFFFFF;  
 font-weight: bold; 
}
</style>  

<script>  
$(function() 
{  
$("#div").dialog(
{  
 autoOpen: false    
});  
$("#opener").click(function() 
{  
$("#div").dialog("open");  
});  
});  
</script>  
</head>  
<body>  

<div id="div" title="Java">"Java is a language used for developing platform independent applications" 
</div>  
<br>
<button id="opener">Open Dialog</button>  
</body>  
</html>  



<html>  
<head>  
<link 
href="http://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css" rel="stylesheet">  
<script src="http://code.jquery.com/jquery-1.10.2.js"></script>  
<script src="http://code.jquery.com/ui/1.10.4/jquery-ui.js">
</script>  

<script>  
$(function() 
{  
/*
$("#div").dialog(
{  
 autoOpen: false
});
*/
$("#div").dialog(
{  
 autoOpen: false,
 hide: "slide",  
 show : "slide",  
 height: 200,
 width: 600,
 buttons: 
 {  
  OK: function(){
   $(this).dialog("close");
   }  
 },  
 title: "Java",  
 position: {  
  my: "left center",  
  at: "left center"  
 }
 
});  
$("#opener").click(function() 
{  
 $("#div").dialog("open");  
});  
});  
  
</script>  
</head>  
<body>  

<div id="div" title="Java">"Java is a language used for developing platform independent applications" 
</div>  
<br>
<button id="opener">Open Dialog</button>  
</body>  
</html>  



Example - 2 : to demonstrate the usage of three options buttons, title and position in the dialog widget. 

<html>  
<head>  
<link href="jquery-ui.css" rel="stylesheet">  
<script src="jquery-1.11.3.min.js"> </script>  
<script src="jquery-ui.min.js"> </script>  

<style>  
.ui-widget-header,.ui-state-default, ui-button
{  
background:lightgreen;  
border: 1px solid #b9cd6d;  
color: black;  
font-weight: bold;  
}  
</style>  

<script>  
$(function() 
{  
$("#dialog-2").dialog({  
 autoOpen: false,   
 buttons: 
 {  
  OK: function(){
   $(this).dialog("close");
   }  
 },  
 title: "Java",  
 position: {  
  my: "left center",  
  at: "left center"  
 }  
 });
 
 $("#opener-2").click(function() 
 {  
  $("#dialog-2").dialog("open");  
 });  
});  
</script>  
</head>  
<body>  

<div id="dialog-2" title="Dialog Title goes here...">Java is a language used for developing platform independent applications</div>  
<button id="opener-2">Open Dialog </button>  
</body>  
</html>  

Example - 3: to demonstrate the usage of these options hide, show and height.

<html>  
<head>  
<link href="http://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css" rel="stylesheet">  
<script src="http://code.jquery.com/jquery-1.10.2.js"></script>  
<script src="http://code.jquery.com/ui/1.10.4/jquery-ui.js"></script>  

<style>  
.ui-widget-header,.ui-state-default, ui-button
{  
background: lightyellow;  
border: 1px solid #b9cd6d;  
color: black;  
font-weight: bold;  
}  
</style>  

<script>  
$(function() 
{  
$("#dialog-3").dialog(
{  
  autoOpen: false,   
  hide: "slide",  
  show : "slide",  
  height: 200,
  width: 600
});  
$("#opener-3").click(function() 
{  
  $("#dialog-3").dialog("open");  
});  
});  
</script>  
</head>  
<body>  

<div id="dialog-3" title="This is a title.">This is a dialog.</div>  
<button id="opener-3">Open Dialog </button>  
</body>  
</html> 


Example - 4: to demonstrate the use of isOpen(), open() and close() method.

<html lang="en">  
<link href="http://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css" rel="stylesheet">  
<script src="http://code.jquery.com/jquery-1.10.2.js"></script>  
<script src="http://code.jquery.com/ui/1.10.4/jquery-ui.js"></script>  

<style>  
.ui-widget-header,.ui-state-default, ui-button
{  
background:#b9cd6d;  
border: 1px solid #b9cd6d;  
color: #FFFFFF;  
font-weight: bold;  
}  
</style>  

<script type="text/javascript">  
$(function()
{  
$("#toggle").click(function() 
{  
($("#dialog-5").dialog("isOpen")==false)? $("#dialog-5").dialog("open") : $("#dialog-5").dialog("close") ;  
});  
$("#dialog-5").dialog(
{
  autoOpen: false
 });  
});  
</script>  
</head>  
<body>  
<button id="toggle">Toggle dialog!
</button>  
<div id="dialog-5" title="Dialog Title!">Click on the Toggle button to open and cose this dialog box.  
</div>  
</body>  
</html>  

DialogTest.html
---------------

<!DOCTYPE html>
<html>
<head>
<title>jQuery UI Autocomplete Control</title>
<link rel="stylesheet" href="style.css"/>
<link rel="stylesheet" href="jquery-ui-1.11.1/jquery-ui.css"/>
    
<script type="text/javascript" src="jquery-ui-1.11.1/external/jquery/jquery.js"></script>
<script type="text/javascript" src="jquery-ui-1.11.1/jquery-ui.js"></script>

<script type="text/javascript">
$("document").ready(function() 
{
$("#dialog1").dialog(
{
 autoOpen: false
});
$("#openDlg1").click(function() 
{
$("#dialog1").dialog("open");
});
$("#dialog2").dialog(
{
autoOpen: false,
buttons: [{
text: "Cancel",click: function () {
$(this).dialog("close");
}
},
{
text: "OK",
click: function () {
$(this).dialog("close");
}
}
]
});

$("#openDlg2").click(function() 
{
$("#dialog2").dialog("open");
});

$("#dialog3").dialog(
{
autoOpen: false,
closeOnEscape: false,
draggable: false,
modal: true,
buttons: [
{
text: "OK",
click: function () {
$(this).dialog("close");
}
}
]
});
$("#openDlg3").click(function() {
$("#dialog3").dialog("open");
});
});
</script>
</head>
<body>
<h1>Using the Dialog Widget</h1>
<p>Although the HTML standard now includes a specification for a &lt;dialog&gt; element, not all browsers uniformly implement it. jQUeryUI provides a dialog widget that works well across browsers regardless of what their level of support is.</p>
    
<h3>Basic Dialog</h3>
<p>The basic dialog template includes a title bar, close box, and space for content.</p>
<button id="openDlg1">Open Dialog</button>

<h3>Dialog with Controls</h3>
<p>To create buttons for the dialog, use the "buttons" property.</p>
<button id="openDlg2">Open Dialog</button>

<h3>Dialog with Customizations</h3>
<p>Dialogs can be further customized via options - draggable, resizable, modal, etc.</p>
<button id="openDlg3">Open Dialog</button>

<div id="dialog1" title="Dialog Title">
<p>This is the dialog content</p>
</div>
<div id="dialog2" title="Dialog with buttons">
<p>This dialog has button controls</p>
</div>
<div id="dialog3" title="Dialog with options">
<p>This dialog has some different options set</p>
</div>
</body>
</html>

==================================== 

DraggableTest1.html
-------------------
<html>
<head> 
<style>
span
{
 font-family:tahoma;
 font-size:24px;
}
</style>

<link href="jquery-ui.css" rel="stylesheet">  
<script src="jquery-1.11.3.min.js"> </script>  
<script src="jquery-ui.min.js"> </script>  
</head>  

<body>  
<div id="div1" style="border:solid 1px;background-color:pink;">  
<span>I am not movable.</span>
<br><br>  
</div>  

<div id="div2" style="border:solid 1px;background-color:lightgreen;">  
<span> Dragging will start only after you drag me for 50px</span>  
<br><br>  
</div>  

<div id="div3" style="border:solid 1px;background-color:lightyellow;">  
<span> Wait for 2000ms before starting to drag. </span>  
<br><br>  
</div>  

<script>  
$("#div1 span").draggable({disabled: true});  

$("#div2 span").draggable({distance:50} );  

$("#div3 span").draggable({delay:2000});  
 </script>  
</body>  
</html>  

DraggableTest2.html
-------------------
<html>
<head>  
<style>
#div1
{
 font-family:verdana;
 font-size: 24px;
}
</style>

<link href="jquery-ui.css" rel="stylesheet">  
<script src="jquery-1.11.3.min.js"> </script>  
<script src="jquery-ui.min.js"></script> 
</head>  

<body>  
<div id="div1" style="border:solid 1px;background:lightyellow;height:30px;">  
<span>You can duplicate me....</span>  
</div>  

<script>  
$("#div1 span").draggable({helper:"clone"});  
</script>  
</body>  
</html>  

DroppableTest1.html
-------------------
<html>  
<head>  
<link href="jquery-ui.css" rel="stylesheet">  
<script src="jquery-1.11.3.min.js"> </script>  
<script src="jquery-ui.min.js"></script>  
<style>  
#draggable-1 
{   
width: 100px; 
height: 100px; 
padding: 0.5em; 
float: left;  
margin: 22px 5px 10px 0;   
}  

#droppable-1 
{   
width: 150px; 
height: 120px;
padding: 0.5em; 
float: left;   
margin: 10px;      
}  
</style>  

<script>  
$(function() 
{  
$("#draggable-1").draggable();  
$("#droppable-1").droppable();  
});  
</script>  
</head>  
<body>  
<div id="draggable-1" class="ui-widget-
content">  
<p>I am a Paragraph<br/> Drag me to another Section</p>  
</div>  

<div id="droppable-1" class="ui-widget-header">  
<p>This is the place to drop any element</p>  
</div>  
</body>  
</html>  

DroppableTest3.html
-------------------
<html>  
<html>  
<head>  
<link href="jquery-ui.css" rel="stylesheet">  
<script src="jquery-1.11.3.min.js"> </script>  
<script src="jquery-ui.min.js"> </script> 

<style>  
#draggable-1 
{   
width: 100px; 
height: 50px; 
padding: 0.5em; 
float: left;  
margin: 22px 5px 10px 0;   
}  
#droppable-1 
{      
width: 120px; 
height: 90px;
padding: 0.5em; 
float: left;   
margin: 10px;  
}  
</style>  

<script>  
$(function() 
{  
$("#draggable-1").draggable();  

$("#droppable-1").droppable(
{  
 drop: function(event,ui) {  
 $(this).addClass("ui-state-highlight").find("p").html("Dropped!");},
 
 over: function(event,ui) {  
  $(this).addClass("ui-state-highlight").find("p").html("moving in!"); },  

  out: function(event,ui) { $(this).addClass("ui-state-highlight").find("p").html("moving out!");} 
 });  
});  
</script>  
</head>  

<body>  
<div id="draggable-1" class="ui-widget-
content">  
<p>Drag me</p>  
</div>  

<div id="droppable-1" class="ui-widget-header">  
<p>Drop Here</p>  
</div>  
</body>  
</html>  


DragDrop.html
-------------
<!DOCTYPE html>
<html>
<head>

<link rel="stylesheet" href="style.css"/>

<link rel="stylesheet" href="jquery-ui.css"/>
    
<script type="text/javascript" src="jquery-1.11.3.min.js"></script>

<script type="text/javascript" src="jquery-ui.min.js"></script>

<script type="text/javascript">
$("document").ready(function() 
{
$("#theDiv").draggable();

//$("#theDiv").draggable({
//axis: "x",
//handle: "h2",
//revert: true,
//});

$("#theDrop").droppable(
{
accept: "#theDiv",
hoverClass: "highlight",
tolerance: "fit",
activate: function (evt, ui) {
$(this).find("h2").css("background-color", "cornsilk");
},
deactivate: function (evt, ui) 
{
$(this).find("h2").css("background-color", "");
},
drop: function(evt, ui) 
{
$(this).find("h2").text("Dropped");
ui.draggable.find("h2").text("Dropped");
}
});
});
</script>
<style>
#theDiv
{
width: 200px;
height: 200px;
background-color: #b3c8d0;
padding: 5pt 5pt 5pt 5pt;
margin: 10pt;
float: left;
overflow: hidden
}
div h2 
{
background-color: #9ba9af;
font-size: 14pt;
text-align: center;
margin-top: 2pt
}
#theDrop 
{
width: 400px;
height: 300px;
padding: 5pt 5pt 5pt 5pt;
margin: 10pt;
overflow: hidden
}
.target 
{
background-color: #cbdde3;
}
.highlight 
{
background-color: yellow;
}
</style>
</head>
<body>
<h1>Using the Drag and Drop interactions</h1>
<p>jQueryUI provides two separate interaction behaviors to implement drag and drop functionality. These are the "draggable" and "droppable" behaviors.</p>
<p>To make an item draggable, simply call the <code>draggable()</code> function on it. Similarly, an item can be made a drop target by calling the <code>droppable()</code> function 
on the element.</p> <p>Each behavior provides a set of options to 
further customize how the behavior works.</p>

<div id="theDiv">
<h2>Drag Me</h2>
<p>Peers Technologies Pvt. Ltd a premier organization, founded in 1997 is a growing IT Training and Services Provider determined to set high standards in IT industry. </p>
</div>

<div id="theDrop" class="target">
<h2>Drop Target</h2>
</div>

</body>
</html>


