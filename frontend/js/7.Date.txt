JavaScript Date Object
======================
- used to work with date and time.



There are four ways of instantiating a Date:

1) default constructor
let today = new Date(); 
- creates a Date object of current date and time


2) using timestamp
- timestamp is the number of milliseconds since 1970 Jan Ist 
<script>
 let timestamp = 3660000
 let today = new Date(timestamp)
 console.log(today)
</script>

if we pass 0, we  will get a Date object that represents the time at Jan 1st 1970 
let today = new Date(0);
console.log(today);


3) using Date components
let d = new Date(year, month, date, hours, minutes, seconds, milliseconds); 

In Java Script Date object, the month is ranging from 0 to 11 and day of the week is ranging from 0 to 6

let date1 = new Date(2020, 3, 2, 11, 22, 13, 0)
let date2 = new Date(2020, 3, 2)
console.log(date1)
console.log(date2)  

4) using Date string
Date(string); - here the Date object uses the parse() method to determine which date you are passing

let date1 = new Date('2020-1-25')
let date2 = new Date('2020-01')
let date3 = new Date('2020')
let date4 = new Date('01/25/2020')



new Date('2018/07/22')
new Date('2018/7/22')
new Date('July 22, 2018')
new Date('July 22, 2018 07:22:13')
new Date('2018-07-22 07:22:13')
new Date('25 March 2018')
new Date('25 Mar 2018')
new Date('25 March, 2018')
new Date('March 25, 2018')
new Date('March 25 2018')
new Date('2018 March') //Mar 1st 2018, 00:00:00


JavaScript Date Methods
-----------------------
1) getFullYear() - returns the year (four digits)
2) getMonth() - returns the month (from 0-11)
3) getDate()
4) getDay()-returns the day of the week(from 0-6 )
5) getHours() 
6) getMinutes() 
7) getSeconds() 
8) getMilliseconds() 

9) setDate(date) 
10) setFullYear(year) 
11) setHours(hours)
12) setMinutes(minutes);
13) setSeconds(seconds)
14) setMilliseconds(milliseconds)
15) setMonth(month[0-11])
16) setTime(time) -sets a date to a specified number of milliseconds after January 1, 1970

let now = new Date();
now.setFullYear(2049);
now.setHours(0);
now.setMinutes(22);
now.setSeconds(3);
console.log(now);

17) getTime() - returns the number of milliseconds since Jan 1, 1970

<script>
 let today = new Date();
 console.log(today.getTime() + 'milliseconds from 1970 Jan Ist');
</script>


/*
 - get today's date
 - get proper date
 - get fullday of the week
 - get USA date and time
 - display a digital clock
*/




Program to get the full day of the week

<script>
let today = new Date();
let day = today.getDay();
switch(day) {
    case 0:
        fullDay = 'Sunday';
        break;
    case 1:
        fullDay = 'Monday';
        break;        
    case 2:
        fullDay = 'Tuesday';
        break;        
    ...
}
console.log('Today is : ' +fullDay)    
</script>    






parse(string) - parses a date string and returns the timestamp

Date.parse('2019-01-23')

Date.parse('2018-07') 
Date.parse('2018') 
Date.parse('07/22/2018')
Date.parse('2018/07/22')
Date.parse('2018/7/22')
Date.parse('July 22, 2018')
Date.parse('July 22, 2018 07:22:13')
Date.parse('2018-07-22 07:22:13')




Human Readable Strings
----------------------
<script>
let now = new Date();
console.log(now.toDateString()); 
console.log(now.toTimeString()); 

console.log(now.toLocaleDateString()); - M/d/YYYY
console.log(now.toLocaleTimeString()); 
console.log(now.toLocaleString()); 
</script>

To get the time of different places of the world
------------------------------
Pacific Daylight Time	Los Angeles
Central Daylight Time	Chicago
Eastern Daylight Time	New_York

<script>
let today = new Date();
console.log(today.toLocaleTimeString())

toLocaleTimeString(locale, options)

//India Time - IST
console.log(today.toLocaleTimeString('en-US',{timeZone:'Asia/Calcutta'})

//New York (USA) time
console.log(today.toLocaleTimeString('en-US',{timeZone:'america/new_york'}))
America/Chicago
America/Los_Angeles

date.toLocaleTimeString('ar-EG')  //Arabic in most Arabic speaking countries uses real Arabic digits

//Berlin (Germany) time
console.log(today.toLocaleTimeString('de-DE',{timeZone:'Europe/Berlin'}))

//London (UK) time
console.log(today.toLocaleTimeString('en-GB',{timeZone:'Europe/London'}))

//Sydney (Australia) time
console.log(today.toLocaleTimeString('en-AU', {timeZone:'Australia/sydney'})

http://www.lingoes.net/en/translator/langcode.htm  -to get Locales

------------------------------------
//to display hours and minutes with AM/PM
console.log(d.toLocaleString('en-US',{hour:'numeric', minute:'numeric', timeZone:'Europe/london',hour12:true}))

hour: '2-digit', minute: '2-digit'

let today = new Date()
console.log(today.toLocaleTimeString('fr-FR', {hour: '2-digit', minute: '2-digit',timeZone:'Europe/Paris',hour12:true}))

------------------------------------
Note: 
If you want to get the current timestamp, you can use the shorthand
 Date.now()
  instead of
 new Date().getTime()





Compare two dates - to get the days difference between 2 dates:
<script>
 const date1 = new Date('January 23, 2019 07:22:13')
 const date2 = new Date('January 21, 2019 07:22:13')

 //get the milli seconds difference between the above dates
 let diff = date1.getTime() - date2.getTime() 
 console.log(diff) 
 console.log("Days Difference = "+ diff/(1000*60*60*24));
</script>


check if two dates are equal:

const date1 = new Date('July 10, 2018 07:22:13')
const date2 = new Date('July 10, 2018 07:22:13')
if (date2.getTime() === date1.getTime()) {
  //dates are equal
}
--------------------------


Timing Events
-------------
(1) setTimeout(function, milliseconds) - executes a function, after waiting a specified number of milliseconds.

(2) setInterval(function, milliseconds) - same as setTimeout(), but repeats the execution of the function continuously.

Example:

<html>
<body>
 <button onclick="setTimeout(myFun, 3000);">Click Me  </button>

<script>
function myFun() 
{
 alert('Hello Java Script');
}
</script>
</body>
</html>



Example:2 - to display the time continuously after each second in the console
<html>
<body>
<script>
function myTimer() {
    let d = new Date();
    console.log(d.toLocaleTimeString());
}    
setInterval(myTimer, 1000);
</script>
</body>
</html>

The clearInterval() method stops the execution of the function specified in the setInterval() method.

<html>
<body>
<script>
let myVar = setInterval(myTimer, 1000);

function myTimer() {
    var d = new Date();
    console.log(d.toLocaleTimeString());
}    
</script>

<button onclick="clearInterval(myVar)">Stop Timer</button>    
</body>
</html>


Design a page to display a counter from 10 and should change after each second and to stop when the counter reaches 0

<html>
<head>
<style>
    #timer {
        font-family:verdana;
        font-size:40px;
        margin:auto;        
        border:2px solid black;
        width:140px;
        height:50px;
        background-color:blueviolet;
        border-radius:50%;
        text-align:center;
        padding:25px 0px;
        color:white;  
        font-weight:bolder;
        text-shadow: 3px 2px 8px black;
        position:fixed;
        right:0px;
    }
</style>    
</head>    
    
<body>
    
<div id="timer"></div> 
    
<script>
let region = document.getElementById('timer');

let handle = setInterval('counter()',1000) 
    
let count=1;    
function counter(){  
  region.innerHTML = count  
  if(count == 10){
      region.innerHTML='Over'
      clearInterval(handle)
  }    
  count++;    
}    
</script>    
</body>
</html>
------------------------

        let msg = ()=>{
            alert('Hai')
        }
        window.onload = msg()



Example-1 : to display the current date and time in the click event of button

<html>
<head>
<style>
span
{
 font-family:verdana;
 font-size:30px;
 color:maroon;
}
</style>
</head>
<body>
<h1>Current Date and Time:</h1> 
<span id="txt"></span> 
 
<script>  
var today=new Date();  
document.getElementById('txt').innerHTML=today;  
</script>  
</body>
</html>

Example 2 : to display the current time

Current Time: <span id="txt"></span>  
<script>  
var today=new Date();  
var h=today.getHours();  
var m=today.getMinutes();  
var s=today.getSeconds();  
document.getElementById('txt').innerHTML=h+":"+m+":"+s;  
</script>  

Example : 3 : Click the button to display the date after setting the time.

<html>
<body>
<p>Click the button to display the date after setting the time.</p>
<button onclick="myFunction()">Try it</button>
<p id="demo"></p>
<script>
function myFunction() 
{
    var d = new Date();
    d.setTime(1332403882588);
    document.getElementById("demo").innerHTML = d;
}
</script>
</body>
</html>

Example: 4 - Click the button to display milliseconds between a specified date (in String form) and January 1, 1970. 
To convert a Date in string format to time stamp (no of milliseconds from 1970 Jan Ist) and to date

<html>
<body>
<button onclick="myFunction()">Click Me </button>
<p id="demo"></p>
<script>
function myFunction() 
{
  var d = Date.parse("December 10, 2015");
  var dat=new Date(d);
  document.getElementById("demo").innerHTML = d+"<br>"+dat;
}
</script>
</body>
</html>

To convert date to timestamp

var d = new Date();
var n = d.valueOf();
//var n=d.getTime();
document.getElementById("demo").innerHTML = n;



Java Script to create a Digital Clock

Current Time: <span id="txt"></span>  
<script>  
window.onload=function(){getTime();}  

function getTime()
{  
var today=new Date();  
var h=today.getHours();  
var m=today.getMinutes();  
var s=today.getSeconds();  
// add a zero in front of numbers<10  
h=checkTime(h);  
m=checkTime(m);  
s=checkTime(s);  
document.getElementById('txt').innerHTML=h+":"+m+":"+s;  
setTimeout(function(){getTime()},1000);  
}  
//setInterval("getTime()",1000);//another way  
function checkTime(i)
{  
if (i<10){  
  i="0" + i;  
 }  
return i;  
}  
</script>  

---------------------------------------
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <style>
        body{
            text-align:center;
            background:linear-gradient(to left,darkslategray,black)
        }
        div{
            width:250px;
            height:100px;
            
            border-radius:15px;
            box-shadow:5px 5px 10px white;
            margin:50px;
            
            color:white;
            text-align:center;
            font-size:30px;
            line-height:100px;
            margin-right:100px;
            display:inline-block;
            
        }
        #usa{
            background: linear-gradient(45deg,black,darkred);
        }
        #england{
            background: linear-gradient(45deg,black,blueviolet);
        }
        #australia{
            background: linear-gradient(45deg,black,limegreen);
        }

    </style>
</head>
<body>
    <div id="usa">USA</div>
    <div id="england">ENGLAND</div>
    <div id="australia">AUSTRALIA</div>

    <script>
        let usa = document.querySelector('#usa')
        let england = document.querySelector('#england')
        let australia = document.querySelector('#australia')

        let getTime = ()=>{
            let date = new Date()
            usa.innerHTML = date.toLocaleTimeString('en-US',{timeZone:'America/new_york'})
            let eng_time = date.toLocaleTimeString('en-GB',{timeZone:'Europe/London',hour12:true})
            england.innerHTML = eng_time.toUpperCase()
            australia.innerHTML = date.toLocaleTimeString('en-AU',{timeZone:'Australia/Sydney',hour12:true})
        }
        setInterval(getTime,1000)
    </script>
</body>
</html>